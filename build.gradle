plugins {
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "2.0.8"
}

version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
}

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    implementation("io.micronaut.oraclecloud:micronaut-oraclecloud-sdk")
    implementation("io.micronaut.oraclecloud:micronaut-oraclecloud-sdk-reactor")
    implementation("io.micronaut.oraclecloud:micronaut-oraclecloud-atp")
    implementation("com.oracle.oci.sdk:oci-java-sdk-objectstorage")
    implementation("io.micronaut.kafka:micronaut-kafka")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.swagger.core.v3:swagger-annotations")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("com.oracle.database.jdbc:ojdbc8")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:oracle-xe")
    testImplementation("org.testcontainers:testcontainers")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut.micrometer:micronaut-micrometer-core")
    runtimeOnly("io.micronaut.oraclecloud:micronaut-oraclecloud-micrometer")
    implementation("io.micronaut:micronaut-tracing")
    implementation("io.opentracing.brave:brave-opentracing")
    runtimeOnly("io.zipkin.brave:brave-instrumentation-http")
    runtimeOnly("io.zipkin.reporter2:zipkin-reporter")
}


application {
    mainClass.set("com.example.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

dockerBuild {
  images = ["iad.ocir.io/cloudnative-devrel/graemerocher/ocidemo"]
}

dockerBuildNative {
  images = ["iad.ocir.io/cloudnative-devrel/graemerocher/ocidemo-native"]
}
